rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their custom claim 'role' is 'admin'
      // Or, for our placeholder, if their user document has role == 'admin'
      // This requires fetching the user's document, which is a read operation.
      return request.auth != null && get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.role == 'admin';
    }

    // Donors Collection
    // - Anyone can create (register) a new donor document (their own user).
    // - Only the authenticated owner or an admin can update or delete their document.
    // - Any authenticated user can view the list of donors.
    match /donors/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }
    
    // Blog Posts Collection
    // - Only admins can create, update, or delete blog posts.
    // - Anyone (even unauthenticated users) can read blog posts.
    match /blogPosts/{postId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Other collections can be read by any authenticated user for now
    // and written to only by admins.
    match /{collection}/{docId} {
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }
  }
}
