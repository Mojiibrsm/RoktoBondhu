rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Public collections, readable by anyone
    match /blogPosts/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /faqs/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /teamMembers/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /testimonials/{docId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if isAdmin();
    }
    
    match /bloodRequests/{docId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || (isAuthenticated() && resource.data.requesterId == request.auth.uid);
    }

    match /donors/{userId} {
      // Anyone can read donor profiles (for search functionality)
      allow read: if true;

      // Users can only create their own document
      allow create: if isOwner(userId);

      // Users can update their own document, admins can update any
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete donor documents
      allow delete: if isAdmin();
    }
  }
}
