rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/donors/$(userId)) &&
             get(/databases/$(database)/documents/donors/$(userId)).data.role == 'admin';
    }

    // Donors Collection
    match /donors/{userId} {
      // Anyone can create their own account (for registration)
      allow create: if request.auth == null;
      
      // Only the authenticated user can see their own data, or an admin
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // Only the authenticated user can update their own data, or an admin
      allow update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // Only an admin can delete a user
      allow delete: if isAdmin(request.auth.uid);
    }
    
    // Allow admins to read the entire donors collection for management purposes
    match /donors/{document=**} {
        allow list: if isAdmin(request.auth.uid);
    }

    // Publicly readable collections
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid); // Only admins can write/update/delete blog posts
    }

    match /faqs/{faqId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid); // Only admins can manage FAQs
    }

    match /teamMembers/{memberId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid); // Only admins can manage team members
    }

    match /testimonials/{testimonialId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid); // Only admins can manage testimonials
    }

    // Blood Requests
    match /bloodRequests/{requestId} {
      // Anyone can see the requests
      allow read: if true;
      
      // Only authenticated users can create a request
      allow create: if request.auth != null;

      // Only an admin can update or delete a request
      allow update, delete: if isAdmin(request.auth.uid);
    }
  }
}
