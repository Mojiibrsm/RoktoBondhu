
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/donors/$(userId)) &&
             get(/databases/$(database)/documents/donors/$(userId)).data.role == 'admin';
    }

    // Public collections: Allow anyone to read, but only admins or specific users to write.
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /faqs/{faqId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /teamMembers/{memberId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /testimonials/{testimonialId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    match /settings/main {
       allow read: if true;
       allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Requests can be read by anyone, created by any auth user, updated/deleted by admin.
    match /bloodRequests/{requestId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Donors collection:
    // - Anyone can read public donor info.
    // - Any new user can create their own donor profile.
    // - A user can only read/update/delete their own document.
    // - Admins can do anything.
    match /donors/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if (request.auth != null && request.auth.uid == userId) || (request.auth != null && isAdmin(request.auth.uid));
    }
    
    // Feedback can be created by anyone, but only read/managed by admins.
    match /feedback/{feedbackId} {
        allow create: if true;
        allow read, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Reports can be created by auth users, but only managed by admins.
    match /reports/{reportId} {
        allow create: if request.auth != null;
        allow read, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
